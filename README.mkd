# [WIP]Plasma

Model (and API access) layer freamework for CocoaTouch.

## Model Framewrok

simply model framework. Plasma provide Model and Collection from NSDictionary (JSON).

### PLAModel 

```objective-c
@interface SimpleModel : PLAModel
@property (nonatomic, strong) NSString *string;
@property (nonatomic, strong) NSNumber *number;
@property (nonatomic, strong) NSURL *url;
@end

@implementation SimpleModel
+ (PLAMappingTable *)propertiesMappingTable {
    PLAMappingTable *mapping = [PLAMappingTable mappingTableWithDictionary:@{
            @"string": @"string",
            @"number": @"number",
    }];
    [mapping addProperty:@"url" path:@"url" transformer:[[PLAURLTransformer alloc] init]];
    return mapping;
}
@end
```

### PLACollection

```objective-c
@interface SimpleCollection : PLACollection
@end

@implementation SimpleCollection
+ (Class)modelClass {
    return [SimpleModel class];
}
@end
```

### MappingTable and Transformer

...

## [WIP] PLARemoteModel & PLARemoveColletion


inspired by backbone.js and NSRails

resource from Web API.

```objective-c
UserModel *user = [UserModel modelWithResourceURL:[NSURL URLWithString:@"http://example.com/api/user/1"]];
[user reloadModel]; // Notification or callback blocks
```

### Networker

* PLANetworkerProtocol

you want create or use presets netwoker

```
@protocol PLANetworkerProtocol<NSObject>
- (void)networking:(PLANetworking *)networking
   startNetworking:(PLANetworkerSuccessCallbackBlock)successCallback
   failureCallback:(PLANetworkerFailureCallbackBlock)failureCallback;
@end
```

examples: MKNetworking, AFNetworing


### Update and syncing

TBD
